Hoy, seguir el tutorial para que el plugin del mapa se compile con el paquete
El plugin es https://github.com/marinaKollmitz/gazebo_ros_2Dmap_plugin
El tutorial es http://gazebosim.org/tutorials?tut=ros_plugins&cat=connect_ros

No logre modificar CMakeLists pero si añadir en package.xml el directorio lib como path de plugins
de gazebo, con lo cual no hay que realizar pasos adicionales


---IMPORTANTE--- el mapa de prueba en este momento depende de ros-kinetic-turtlebot3*


(Edu) Para probar, hemos copiado el modelo del robot mbzirc incluido en grvc_ual para modificarlo y añadir el gripper
Esta analizando como van los archivos


Yo, a continuación, me pongo a trabajar en otro branch cómo añadir el lidar al robot


xacro es una forma modular y fancy de urdf, a diferencia de sdf, y puedes sacar un urdf del xacro



En la sesión de tarde, cómo incorporar un lidar al robot

PX4 + Gazebo: https://docs.px4.io/master/en/simulation/gazebo.html
- OPCIONAL: podemos añadir ruido a la medida del gps

Programar lidar: https://www.cplusgears.com/lesson-5-adding-a-lidar.html

El launch de grvc_ual llama a spawn robot, que lo que hace es cargar el robot en gazebo, junto a mavros y demás
En el spawn del robot, el xacro se transforma a urdf y luego a sdf
Añadiremos el sensor como un plugin de gazebo montado encima del robot

Para ello se ha creado el archivo lidar.xacro con los parámetros de joint, link y gazebo
Luego se instancia en model.xacro, y con visualize.launch vemos en rviz que es correcto


Hasta el momento, no he logrado cargar control y robot modificado a la vez, pero puedes cargar un mundo vacio con el robot y va bien
para ello, primero cargas un mundo vacío con "roslaunch gazebo_ros empty_world.launch"
en la carpeta del modelo, "xacro --inorder model.urdf.xacro > tmp.urdf && check_urdf tmp.urdf"
"rosrun gazebo_ros spawn_model -file `rospack find delivery_uav`/models/mbzirc/tmp.urdf -urdf -x 0 -y 0 -z 2 -model MYROBOT"

